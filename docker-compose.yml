version: '2'
services:
  postgres:
    image: postgres:9.6
    ports:
      - "5432:5432"
    environment:
      - POSTGRES_DB=connect
      - POSTGRES_USER=connect
      - POSTGRES_PASSWORD=connect
      - MAX_CONNECTIONS=300
    networks:
      - avro_network
  zookeeper:
    image: 'zookeeper:3.4.9'
    restart: unless-stopped
    hostname: zookeeper
    ports:
      - '2181:2181'
    environment:
      ZOO_MY_ID: 1
      ZOO_PORT: 2181
      ZOO_SERVERS: 'server.1=zookeeper:2888:3888'
    networks:
      - avro_network
  kafka:
    image: 'confluentinc/cp-kafka:3.3.1'
    hostname: kafka
    ports:
      - '9092:9092'
    extra_hosts:
      - 'kafka:127.0.0.1'
      - 'localhost:127.0.0.1'
    environment:
      KAFKA_ADVERTISED_LISTENERS: 'PLAINTEXT://kafka:9092'
      KAFKA_ZOOKEEPER_CONNECT: 'zookeeper:2181'
      KAFKA_BROKER_ID: 1
      KAFKA_LOG4J_LOGGERS: 'kafka.controller=INFO,kafka.producer.async.DefaultEventHandler=INFO,state.change.logger=INFO'
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
    volumes:
      - '/var/run/docker.sock:/var/run/docker.sock'
    networks:
      - avro_network
    depends_on:
      - zookeeper
  kafka-schema-registry:
    image: 'confluentinc/cp-schema-registry:3.3.1'
    restart: unless-stopped
    ports:
      - '8081:8081'
    environment:
      SCHEMA_REGISTRY_KAFKASTORE_CONNECTION_URL: 'zookeeper:2181'
      SCHEMA_REGISTRY_HOST_NAME: kafka-schema-registry
    networks:
      - avro_network
    depends_on:
      - zookeeper
      - kafka
  schema-registry-ui:
    image: 'landoop/schema-registry-ui:0.9.3'
    hostname: kafka-schema-registry-ui
    ports:
      - '8001:8000'
    environment:
      SCHEMAREGISTRY_URL: 'http://kafka-schema-registry:8081/'
      PROXY: 'true'
    networks:
      - avro_network
    depends_on:
      - kafka-schema-registry
  kafka-rest-proxy:
    image: 'confluentinc/cp-kafka-rest:3.3.1'
    hostname: kafka-rest-proxy
    ports:
      - '8082:8082'
    environment:
      KAFKA_REST_ZOOKEEPER_CONNECT: 'zookeeper:2181'
      KAFKA_REST_LISTENERS: 'http://0.0.0.0:8082/'
      KAFKA_REST_SCHEMA_REGISTRY_URL: 'http://kafka-schema-registry:8081/'
      KAFKA_REST_HOST_NAME: kafka-rest-proxy
      KAFKA_REST_BOOTSTRAP_SERVERS: 'kafka:9092'
    networks:
      - avro_network
    depends_on:
      - zookeeper
      - kafka
      - kafka-schema-registry
  kafka-topics-ui:
    image: 'landoop/kafka-topics-ui:0.9.3'
    hostname: kafka-topics-ui
    ports:
      - '8000:8000'
    environment:
      KAFKA_REST_PROXY_URL: 'http://kafka-rest-proxy:8082/'
      PROXY: 'true'
    networks:
      - avro_network
    depends_on:
      - zookeeper
      - kafka
      - kafka-schema-registry
      - kafka-rest-proxy
  kafka-connect:
    image: confluentinc/cp-kafka-connect:3.3.1
    hostname: kafka-connect
    ports:
      - "8083:8083"
    environment:
      CONNECT_BOOTSTRAP_SERVERS: "kafka:9092"
      CONNECT_ZOOKEEPER_CONNECT: 'zookeeper:2181'
      CONNECT_REST_PORT: 8083
      CONNECT_GROUP_ID: compose-connect-group
      CONNECT_CONFIG_STORAGE_TOPIC: docker-connect-configs
      CONNECT_OFFSET_STORAGE_TOPIC: docker-connect-offsets
      CONNECT_STATUS_STORAGE_TOPIC: docker-connect-status
      CONNECT_KEY_CONVERTER: 'io.confluent.connect.avro.AvroConverter'
      CONNECT_KEY_CONVERTER_SCHEMA_REGISTRY_URL: 'http://kafka-schema-registry:8081'
      CONNECT_VALUE_CONVERTER: 'io.confluent.connect.avro.AvroConverter'
      CONNECT_VALUE_CONVERTER_SCHEMA_REGISTRY_URL: 'http://kafka-schema-registry:8081'
      CONNECT_INTERNAL_KEY_CONVERTER: "org.apache.kafka.connect.json.JsonConverter"
      CONNECT_INTERNAL_VALUE_CONVERTER: "org.apache.kafka.connect.json.JsonConverter"
      CONNECT_REST_ADVERTISED_HOST_NAME: "localhost"
      CONNECT_LOG4J_ROOT_LOGLEVEL: "INFO"
      CONNECT_LOG4J_LOGGERS: "org.apache.kafka.connect.runtime.rest=WARN,org.reflections=ERROR"
      CONNECT_CONFIG_STORAGE_REPLICATION_FACTOR: "1"
      CONNECT_OFFSET_STORAGE_REPLICATION_FACTOR: "1"
      CONNECT_STATUS_STORAGE_REPLICATION_FACTOR: "1"
      CONNECT_OFFSET_FLUSH_INTERVAL_MS: 10000
      CONNECT_PLUGIN_PATH: /usr/share/java
      HADOOP_USER_NAME: augusto.branquinho
    networks:
      - avro_network
    depends_on:
      - zookeeper
      - kafka
      - kafka-schema-registry
      - kafka-rest-proxy
  kafka-connect-ui:
    image: landoop/kafka-connect-ui:0.9.4
    hostname: kafka-connect-ui
    ports:
      - "8003:8000"
    environment:
      CONNECT_URL: "http://kafka-connect:8083/"
      PROXY: "true"
    networks:
      - avro_network
    depends_on:
      - kafka-connect
  zoonavigator-api:
    image: elkozmon/zoonavigator-api:0.4.0
    environment:
      SERVER_HTTP_PORT: 9000
    restart: unless-stopped
    networks:
      - avro_network
    depends_on:
      - zookeeper
  zoonavigator-web:
    image: elkozmon/zoonavigator-web:0.4.0
    ports:
     - "8004:8000"
    environment:
      API_HOST: "zoonavigator-api"
      API_PORT: 9000
    links:
     - zoonavigator-api
    networks:
      - avro_network
    depends_on:
     - zoonavigator-api
    restart: unless-stopped

networks:
  avro_network:
    driver: bridge
    ipam:
      driver: default
      config:
        - subnet: 172.26.0.0/16
